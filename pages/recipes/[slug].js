import { createClient } from 'contentful'
import { documentToReactComponents } from '@contentful/rich-text-react-renderer'
import Image from 'next/image'

const client = createClient({
    space: process.env.CONTENTFUL_SPACE_ID,
    accessToken: process.env.CONTENTFUL_ACCESS_KEY,
})

export async function getStaticPaths() {
    //Gets all the content
    const res = await client.getEntries({ content_type: "recipe" })

    //Generate paths to be made at build time for all pages based on the slug.js file
    const paths = res.items.map(item => {
        return {
            params: { slug: item.fields.slug }
        }
    })


    return {
        paths: paths,
        fallback: false
    }
}

export async function getStaticProps({ params }) {
    //The field.slug property is Contentful Specific feature
    //This essentially accesses the data based on the path already generated by getstaticpaths
    const { items } = await client.getEntries({
        content_type: "recipe",
        'fields.slug': params.slug
    })

    return {
        props: {
            recipe: items[0],

        },
        revalidate: 1
    }
}



export default function RecipeDetails({ recipe }) {

    //Destructuring out all the content from the recieved recipe prop
    const { featureImage, title, cookingTime, ingredients, method } = recipe.fields

    return (
        <div>
            <div className="banner">
                <Image
                    src={'https:' + featureImage.fields.file.url}
                    width={featureImage.fields.file.details.image.width}
                    height={featureImage.fields.file.details.image.height}
                    alt="chow"
                />
                <h2>{title}</h2>
            </div>

            <div className="info">
                <p>Takes about {cookingTime} mins to cook.</p>
                <h3>Ingredients:</h3>

                {ingredients.map(ing => (
                    <span key={ing}>{ing}</span>
                ))}
            </div>

            <div className="method">
                <h3>Method:</h3>
                <div>
                    {documentToReactComponents(method)}
                </div>
            </div>

            <style jsx>{`
          h2,h3 {
            text-transform: uppercase;
          }
          .banner h2 {
            margin: 0;
            background: #fff;
            display: inline-block;
            padding: 20px;
            position: relative;
            top: -60px;
            left: -10px;
            transform: rotateZ(-1deg);
            box-shadow: 1px 3px 5px rgba(0,0,0,0.1);
          }
          .info p {
            margin: 0;
          }
          .info span::after {
            content: ", ";
          }
          .info span:last-child::after {
            content: ".";
          }
        `}</style>
        </div>
    )
}